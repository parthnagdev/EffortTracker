openapi: 3.0.3
info:
  title: Effort Tracker
  description: |-
    These are APIs for Effort tracker system.
  version: 1.0.0
servers:
  - url: http://localhost:8080/
tags:
  - name: user
    description: Operations about user
paths:
  /task/create:
    post:
      tags:
        - task
      summary: Adds task in the system
      description: Adds task in the system
      operationId: createTask
      requestBody:
        description: Adds task in the system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid input
        '500':
          description: Internal Error
  /task/list:
    post:
      tags:
        - task
      summary: Lists task in the system
      description: Lists task in the system
      operationId: listTasks
      requestBody:
        description: Lists task in the system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTasksRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTasksResponse'
        '400':
          description: Invalid input
        '500':
          description: Internal Error
  /task/update:
    post:
      tags:
        - task
      summary: Updates a task
      description: performs task updation
      operationId: updateTask
      requestBody: 
        description: Task object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Invalid input
        '404':
          description: Task not found
        '500':
          description: Internal Error
  /user/create:
    post:
      tags:
        - user
      summary: Adds user in the system
      description: Adds user in the system
      operationId: createUser
      requestBody:
        description: Adds user in the system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
        '409':
          description: User already exists
        '500':
          description: Internal Error 
  /user/list:
    post:
      tags:
        - user
      summary: Lists user in the system
      description: Lists user in the system
      operationId: listUsers
      requestBody:
        description: Lists user in the system
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUsersRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
        '400':
          description: Invalid input
        '500':
          description: Internal Error      
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: String
          example: hhdbsjns-hddjskks-shdhdjsk
        name:
          type: string
          example: John
        username:
          type: string
          example: john
    Task:
      type: object
      properties:
        id:
          type: string
          example: hjhfhsfhsfggghg
        title:
          type: string
          example: Enable gitignore
        description:
          type: string
          example: Add gitignore file with files to ignore for git
        estimate:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: User to which this task is assigned
        state:
          $ref: '#/components/schemas/State'
    State:
      type: string
      enum:
        - OPEN
        - INPROGRESS
        - COMPLETE
    StringFilter:
      type: array
      items:
        type:
          string
    Filter:
      type: object
      properties:
        userFilter:
          $ref: '#/components/schemas/StringFilter'
        stateFilter:
          $ref: '#/components/schemas/StringFilter'
    FilterUser:
      type: object
      properties:
        userFilter:
          $ref: '#/components/schemas/StringFilter'
    ListUsersRequest:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/FilterUser'
    ListUsersResponse:
      type: object
      properties:
        userList:
          type: array
          items:
            $ref: '#/components/schemas/User'
    ListTasksRequest:
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/Filter'
    ListTasksResponse:
      type: object
      properties:
        taskList:
          type: array
          items:
            $ref: '#/components/schemas/Task'
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  requestBodies:
    User:
      description: User to be added
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
    Task:
      description: Task to be added
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Task'